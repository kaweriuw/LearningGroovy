plugins {
    id "idea"
    id "groovy"
    id "com.github.erdi.webdriver-binaries" version "2.2"
    id "com.github.erdi.idea-base" version "2.2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    ext {
        // The drivers we want to use
        drivers = ["firefox", "chrome", "chromeHeadless"]

        ext {
            gebVersion = '5.1'
           //seleniumVersion = '3.14.0'
            seleniumVersion = '4.1.4'
            chromeDriverVersion = '101.0.4951.41'
            geckoDriverVersion = '0.26.0'
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {

// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-support
        implementation group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '4.1.4'

        // If using Spock, need to depend on geb-spock
       testImplementation "org.gebish:geb-spock:$gebVersion"

        // If using JUnit, need to depend on geb-junit
        testImplementation "org.gebish:geb-junit4:$gebVersion"
        testImplementation "junit:junit:4.13.2"
        // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-devtools-v86
        implementation group: 'org.seleniumhq.selenium', name: 'selenium-devtools-v86', version: '4.0.0-alpha-7'


        // Drivers
        testImplementation "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
        testImplementation "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    }

    webdriverBinaries {
        chromedriver {
            version = chromeDriverVersion
            fallbackTo32Bit = true
        }
        geckodriver geckoDriverVersion
    }

    drivers.each { driver ->
        task "${driver}Test"(type: Test) {
            group JavaBasePlugin.VERIFICATION_GROUP

            outputs.upToDateWhen { false }  // Always run tests

            systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
            systemProperty "geb.env", driver
        }
    }

    test {
        dependsOn drivers.collect { tasks["${it}Test"] }
        enabled = false
    }

    tasks.withType(Test) {
        maxHeapSize = "1g"
        jvmArgs '-XX:MaxMetaspaceSize=128m'
        testLogging {
            exceptionFormat = 'full'
        }
    }

    tasks.withType(GroovyCompile) {
        groovyOptions.forkOptions.memoryMaximumSize = '256m'
    }
}

test {
    useJUnitPlatform()
}